!function(t){var n={};function e(s){if(n[s])return n[s].exports;var o=n[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,s){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:s})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(e.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)e.d(s,o,function(n){return t[n]}.bind(null,o));return s},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=2)}([function(t,n,e){"use strict";e.d(n,"b",(function(){return c})),e.d(n,"c",(function(){return a})),e.d(n,"d",(function(){return i})),e.d(n,"e",(function(){return r})),e.d(n,"a",(function(){return s}));const s=connect.makeEnum(["URL","EMAIL","NUMBER","STRING","DATE"]);function o(t){Object.keys(t).forEach(n=>{const e=(s=n).charAt(0).toUpperCase()+s.slice(1);var s;e!==n&&(t[e]=t[n],delete t[n]),"References"===e&&Object.values(t[e]).forEach(t=>o(t))})}const c=function(t,n){connect.assertNotNull(t,"Task contact object"),connect.assertNotNull(t.name,"Task name");var e=connect.core.getClient();t.taskTemplateId?(t.endpoint&&(t.quickConnectId=t.endpoint.endpointARN.split("/").pop(),delete t.endpoint),o(t),e.call(connect.TaskTemplatesClientMethods.CREATE_TEMPLATED_TASK,t,n)):(connect.assertNotNull(t.endpoint,"Task endpoint"),t.idempotencyToken=AWS.util.uuid.v4(),delete t.endpoint.endpointId,e.call(connect.ClientMethods.CREATE_TASK_CONTACT,t,n))},i=function(t,n){connect.assertNotNull(t,"Query params for listTaskTemplates");var e=connect.core.getClient(),s=connect.core.getAgentDataProvider().getInstanceId();e.call(connect.TaskTemplatesClientMethods.LIST_TASK_TEMPLATES,{instanceId:s,queryParams:t},n)},a=function(t,n){connect.assertNotNull(t,"Task template params"),connect.assertNotNull(t.id,"Task template id");var e=connect.core.getClient(),s=connect.core.getAgentDataProvider().getInstanceId();e.call(connect.TaskTemplatesClientMethods.GET_TASK_TEMPLATE,{instanceId:s,templateParams:t},n)},r=function(t,n){connect.assertNotNull(t,"Update for templated task"),connect.assertNotNull(t.contactId,"Task contact id");var e=connect.core.getClient();o(t),e.call(connect.TaskTemplatesClientMethods.UPDATE_CONTACT,t,n)}},function(t,n,e){"use strict";e.d(n,"a",(function(){return M}));const s="NeverStarted",o="Starting",c="Connected",i="ConnectionLost",a="Ended",r="ConnectionLost",u="ConnectionGained",l="Ended",d="IncomingMessage";class h{constructor(t,n,e){h.baseInstance||(h.baseInstance=new b(e)),this.contactId=t,this.initialContactId=n,this.status=null,this.eventBus=new connect.EventBus,this.subscriptions=[h.baseInstance.onEnded(this.handleEnded.bind(this)),h.baseInstance.onConnectionGain(this.handleConnectionGain.bind(this)),h.baseInstance.onConnectionLost(this.handleConnectionLost.bind(this)),h.baseInstance.onMessage(this.handleMessage.bind(this))]}start(){return h.baseInstance.start()}end(){this.eventBus.unsubscribeAll(),this.subscriptions.forEach(t=>t.unsubscribe()),this.status=a}getStatus(){return this.status||h.baseInstance.getStatus()}onEnded(t){return this.eventBus.subscribe(l,t)}handleEnded(){this.eventBus.trigger(l,{})}onConnectionGain(t){return this.eventBus.subscribe(u,t)}handleConnectionGain(){this.eventBus.trigger(u,{})}onConnectionLost(t){return this.eventBus.subscribe(r,t)}handleConnectionLost(){this.eventBus.trigger(r,{})}onMessage(t){return this.eventBus.subscribe(d,t)}handleMessage(t){t.InitialContactId!==this.initialContactId&&t.ContactId!==this.contactId||this.eventBus.trigger(d,t)}}h.baseInstance=null;class b{constructor(t){this.status=s,this.eventBus=new connect.EventBus,this.initWebsocketManager(t)}initWebsocketManager(t){this.websocketManager=t,this.websocketManager.subscribeTopics(["aws/task"]),this.subscriptions=[this.websocketManager.onMessage("aws/task",this.handleMessage.bind(this)),this.websocketManager.onConnectionGain(this.handleConnectionGain.bind(this)),this.websocketManager.onConnectionLost(this.handleConnectionLost.bind(this)),this.websocketManager.onInitFailure(this.handleEnded.bind(this))]}start(){return this.status===s&&(this.status=o),Promise.resolve()}onEnded(t){return this.eventBus.subscribe(l,t)}handleEnded(){this.status=a,this.eventBus.trigger(l,{})}onConnectionGain(t){return this.eventBus.subscribe(u,t)}handleConnectionGain(){this.status=c,this.eventBus.trigger(u,{})}onConnectionLost(t){return this.eventBus.subscribe(r,t)}handleConnectionLost(){this.status=i,this.eventBus.trigger(r,{})}onMessage(t){return this.eventBus.subscribe(d,t)}handleMessage(t){let n;try{n=JSON.parse(t.content),this.eventBus.trigger(d,n)}catch(n){connect.getLog().error("Wrong message format: %s",t)}}getStatus(){return this.status}}var g=h;const p="INCOMING_MESSAGE",C="TRANSFER_FAILED",T="TRANSFER_SUCCEEDED",f="TRANSFER_INITIATED",E="CONNECTION_ESTABLISHED",v="CONNECTION_LOST",I="CONNECTION_BROKEN",m="TASK_EXPIRING",_="TASK_EXPIRED",k={"application/vnd.amazonaws.connect.event.transfer.initiated":f,"application/vnd.amazonaws.connect.event.transfer.succeeded":T,"application/vnd.amazonaws.connect.event.transfer.failed":C,"application/vnd.amazonaws.connect.event.expire.warning":m,"application/vnd.amazonaws.connect.event.expire.complete":_};class A{constructor(t){this.pubsub=new connect.EventBus,this.initialContactId=t.initialContactId,this.contactId=t.contactId,this.websocketManager=t.websocketManager}subscribe(t,n){this.pubsub.subscribe(t,n),connect.getLog().info(connect.LogComponent.TASK,"Subscribed successfully to eventName: %s",t)}connect(){return this._initConnectionHelper().then(this._onConnectSuccess.bind(this),this._onConnectFailure.bind(this))}getTaskDetails(){return{initialContactId:this.initialContactId,contactId:this.contactId}}unsubscribeAll(){this.pubsub.unsubscribeAll(),this.connectionHelper.end()}_triggerEvent(t,n){connect.getLog().debug(connect.LogComponent.TASK,"Triggering event for subscribers: %s",t).withObject({data:n,taskDetails:this.getTaskDetails()}),this.pubsub.trigger(t,n)}_onConnectSuccess(t){connect.getLog().info(connect.LogComponent.TASK,"Connect successful!");const n={_debug:t,connectSuccess:!0,connectCalled:!0};return this._triggerEvent(E,n),n}_onConnectFailure(t){const n={_debug:t,connectSuccess:!1,connectCalled:!0,metadata:this.sessionMetadata};return connect.getLog().error(connect.LogComponent.TASK,"Connect Failed").withException(n),Promise.reject(n)}_initConnectionHelper(){return this.connectionHelper=new g(this.contactId,this.initialContactId,this.websocketManager),this.connectionHelper.onEnded(this._handleEndedConnection.bind(this)),this.connectionHelper.onConnectionLost(this._handleLostConnection.bind(this)),this.connectionHelper.onConnectionGain(this._handleGainedConnection.bind(this)),this.connectionHelper.onMessage(this._handleIncomingMessage.bind(this)),this.connectionHelper.start()}_handleEndedConnection(t){this._triggerEvent(I,t)}_handleGainedConnection(t){this._triggerEvent(E,t)}_handleLostConnection(t){this._triggerEvent(v,t)}_handleIncomingMessage(t){const n=t.ContentType;k[n]&&this._triggerEvent(k[n],t),this._triggerEvent(p,t)}}class S{constructor(t){this.controller=t}onMessage(t){this.controller.subscribe(p,t)}onTransferSucceeded(t){this.controller.subscribe(T,t)}onTransferFailed(t){this.controller.subscribe(C,t)}onTransferInitiated(t){this.controller.subscribe(f,t)}onTaskExpiring(t){this.controller.subscribe(m,t)}onTaskExpired(t){this.controller.subscribe(_,t)}onConnectionBroken(t){this.controller.subscribe(I,t)}onConnectionEstablished(t){this.controller.subscribe(E,t)}connect(t){return this.controller.connect(t)}cleanUp(){this.controller.unsubscribeAll()}}const M={create:t=>{const n=new A(t);return new S(n)}}},function(t,n,e){"use strict";e.r(n),function(t){e.d(n,"TaskSession",(function(){return c}));var s=e(1),o=e(0);t.connect=t.connect||{},connect.TaskSession=s.a,connect.Agent.prototype.createTask||(connect.Agent.prototype.createTask=o.b),connect.Agent.prototype.getTaskTemplate||(connect.Agent.prototype.getTaskTemplate=o.c),connect.Agent.prototype.listTaskTemplates||(connect.Agent.prototype.listTaskTemplates=o.d),connect.Agent.prototype.updateContact||(connect.Agent.prototype.updateContact=o.e),connect.ReferenceType=o.a;const c=s.a}.call(this,e(3))},function(t,n){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(t){"object"==typeof window&&(e=window)}t.exports=e}]);